<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.nf.ch06.dao.UserDao">


<!--    resultMap-->
    <resultMap id="userMap" type="edu.nf.ch06.entity.Users">
        <id property="uid" column="u_id" />
        <result property="userName" column="u_name" />
        <result property="age" column="age" />
        <result property="tel" column="tel" />
     </resultMap>

<!--    动态条件查询（使用if语句来拼接条件，使用与一个或者多个的条件拼接）-->
<!--    如果dao接口的参数实体对象，条件表达式中的变量名，对应实体的字段-->
    <select id="listUser" parameterType="users" resultMap="userMap">
        select u_id,u_name,age ,tel from user_info2
        <where>
            <if test="userName != null and userName !=''">
                u_name = #{userName}
            </if>
            <if test="age !=null">
                and age = #{age}
            </if>
        </where>
    </select>
<!--    动态条件查询（使用choose选择条件，适用于多选一）-->
    <select id="listUser2" parameterType="users" resultMap="userMap">
        select u_id ,u_name ,age ,tel from user_info2
        <choose>
            <when test="userName ! = null and userName != ''">
                where u_name = #{userName}
            </when>
            <when test="age !=null">
                where age = #{age}
            </when>
            <otherwise>
                order by u_id desc
            </otherwise>
        </choose>
    </select>


<!--    动态条件范围查询 (使用foreach，适用于in或者or语句)
        当方法参数是一个数组类型的时候，parameterType就必须指定为collection
        表达式中应使用array这个变量操作数组
        open 属性指定子查询的左括号，close指定子查询的右括号-->
    <select id="listUser3" parameterType="collection" resultMap="userMap">
        select u_id ,u_name ,age ,tel from user_info2
        <where>
            u_id in
            <if test="array !=null">
                <foreach collection="array" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

<!--    动态更新-->
<!--    prefix 属性设置更新语句前缀也就是set语句
        suffixOverrides表示将最后一个更新字段的逗号特换成
        suffix属性值得的空格符，suffix属性可以不用值得，默认就是空格-->
    <update id="update" parameterType="users" >
        update user_info2
        <trim prefix="set" suffixOverrides="," suffix=" where u_id = #{uid}">
            <if test="userName != null and userName != ''">
                u_name = #{userName,
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="tel != null and tel != ''">
                tel = #{tel},
            </if>
        </trim>
<!--        <where>-->
<!--            u_id = #{uid}-->
<!--        </where>-->
    </update>
</mapper>
